   Compiled by Raphael Finkel with assistance from the SAIL
   community.

AOS (aus (East coast) ay-ahs (West coast)) Based on a PDP-10
   increment instruction.  v.  To increase the amount of something:
   "Aos the campfire". usage: considered silly.

BAGBITER 1. n.  Equipment or program that fails, usually
   intermittently. 2. adj. BAGBITING: failing hardware or software.
   "This bagbiting system won't let me get out of spacewar." usage:
   verges on obscenity.  Synonyms: loser, losing, cretinous,
   bletcherous.

BLETCH from German "brechen", to vomit.  (?) 1. interj. Term of
   disgust. 2. adj. BLETCHEROUS: disgusting in design or function.
   "This keyboard is bletcherous!".  usage: slightly comic.

BLT (blit, very rarely belt) Based on the PDP-10 block transfer
   instruction.  Confusing to users of the PDP-11.  1. v. To transfer
   a large contiguous package of information from one place to
   another. 2.  THE BIG BLT, n.  Shuffling operation on the PDP-10
   under some operating systems that consumes significant computer
   time.

BUG Comes from telephone terminology: "bugs in a telephone cable",
   blamed for noisy lines.  n.  An unwanted and unintended property
   of a program.  See "feature."

BUM 1. v.  To make highly efficient, either in time or space, often
   at the expense of clarity.  "I managed to bum three more
   instructions." 2. n.  A small change to an algorithm to make it
   more efficient.  usage: somewhat rare.

CDR (ku'der) From LISP. 1. v.  with "down": to trace down a list of
   elements.  "Shall we cdr down the agenda?".  usage: silly.

CONS From LISP. 1. v.  To add a new element to a list. 2. v. CONS UP:
   To synthesize from smaller pieces: "to cons up an example".

CRETIN 1. n.  Congenital loser, q. v. 2. CRETINOUS adj.  See
   "bletcherous" and "bagbiting".  usage: somewhat ad hominem.

CROCK n.  An awkward feature or programming technique that ought to
   be made cleaner.  example: To use small integers to represent
   error codes without the program interpreting them to the user is a
   crock.

CRUFTY From "cruddy" adj. 1.  Poorly built, possibly overly complex.
   "This is standard old crufty DEC software".  Hence CRUFT, n.
   shoddy construction.  2.  Unpleasant, especially to the touch,
   often with encrusted junk. Like spilled coffee smeared with peanut
   butter and ketchup.  Hence CRUFT, disgusting mess.  3.  Generally
   unpleasant.

DIKE From "diagonal cutters". v. To remove a module or disable it.
   "When in doubt, dike it out."

DOWN 1. adj.  Not working, as "The up escalator is down". 2.  TAKE
   DOWN v.  To deactivate, usually for repair work.

FAULTY 1. n.  Same denotation as "bagbiting", "bletcherous",
   "losing", q. v., but the connotation is much milder.

FEATURE 1. n. A surprising property of a program.  Occasionally
   documented.  To call a property a feature sometimes means that the
   author of the program did not consider the particular case, and
   the program makes an unexpected, although not strictly speaking an
   incorrect response.  See "bug". "That's not a bug, that's a
   feature!" A bug can be changed to a feature by documenting it. 2.
   A well-known and beloved property, a facility.

FLAKEY 1. adj.  Subject to frequent lossages.  See "lossage".

FLAVOR n.  Variety, type, kind.

FLUSH v. To delete something, usually superfluous.  "All that
   nonsense has been flushed".

FOO 1. from Yiddish "feh" or the Anglo-Saxon "fooey!" interj.  Term
   of disgust.  2.  Comes from FUBAR (Fucked up beyond all
   recognition), from WWII.  Often seen as FOOBAR.  name used for
   temporary programs, or samples of three letter names.  Other
   similar words are BAR, BAZ (Stanford corruption of BAR), and
   rarely RAG.  These have been used in Pogo as well.  3.  Used very
   generally as a sample name for absolutely anything.

FROBNICATE 1. v. To manipulate or adjust, to tweak.  Derived from
   FROBNITZ, q. v.  Usually abbreviated to FROB.  Thus one has the
   saying "To frob a frob".

FROBNITZ, pl. FROBNITZEM (frob'nitsm) 1. n. An unspecified physical
   object, a widget.  Also refers to electronic black boxes.  This
   rare form is usually abbreviated to FROTZ, or more commonly to
   FROB.

GLITCH From the Yiddish "glitshen", to slide. 1. n. A sudden
   interruption in electric service, sanity, or program function.
   Sometimes recoverable. 2.  v.  To commit a glitch.

GRONK From the cartoon strip "B.C." 1. v.  To clear the state of a
   wedged device and restart it.  More severe than "to frob", q. v.
   2.  To break.  "The teletype scanner was gronked, so we took the
   system down."

HACK 1. n.  Originally a quick job that produces what is needed, but
   not well.  2. The result of that job.  3. NEAT HACK: a clever
   technique. 4. REAL HACK: a crock, (occasionally affectionate) 5.
   v. with "together": to throw something together so it will work.
   6. to bear emotionally or physically.  "I can't hack this heat!"

HACKER Originally, someone who makes furniture with an axe.  1. n.  A
   person who is good at programming quickly.  Not everything a
   hacker produces is a hack. 2. An expert at a particular program,
   example: "A SAIL hacker". 3.  A malicious or inquisitive meddler
   who tries to discover information by poking around.  Hence
   "keyword hacker", "network hacker".

JFCL (djif'kl or djafik'l)  1. Based on the PDP-10 instruction that acts
   as a fast no-op.  2. v.  To cancel or annul something. "Why don't you
   jfcl that out?" 3.  The California licence plate Geoff Goodfellow's
   gray-beige 450SL Mercedes-Benze.  

JIFFY n. 1. Interval of CPU time, commonly 1/60 second or 1
   millisecond.  2. Indeterminate time from a few seconds to forever.
   "I'll do it in a jiffy" means certainly not now and possibly
   never.

JOCK n. Programmer that is characterized by large and somewhat
   brute force programs. Particualrly well suited term for systems
   programmers.

JRST (jerst) Based on the PDP-10 jump instruction. 1.  v.  To
   suddenly change subjects.  Rather rare.  "Jack be nimble, Jack be
   quick; Jack jrst over the candle stick."

KLUDGE (kloodj) alt: KLUGE. From the German "kluge", clever. 1.  A
   Rube Goldberg device in hardware or software.  2.  n.  A clever
   programming trick intended to solve a particular nasty case in an
   efficient, if not clear, manner.  Often used to repair bugs.
   Often verges on being a crock.  3.  Something that works for the
   wrong reason.

LOSE from MIT jargon 1. v.  To fail.  A program loses when it
   encounters an exceptional condition.

LOSER n.  An unexpectedly bad situation, program, programmer, or
   person.  Especially "real loser".

LOSSAGE n. The result of a bug or malfunction.

MOBY Seems to have been in use among model railroad fans years ago.
   Entered the world of AI with the Fabritek 256K moby memory of
   MIT-AI.  Derived from "Moby Dick" (some say from "Moby Pickle").
   1. adj.  Large, immense, or complex.  "A moby frob". 2. n.  The
   maximum address space of a machine, hence 3. n. 256K words, the
   size of a PDP-10 moby.

MUMBLE 1. interj.  Said when the correct response is either too
   complicated to enunciate or the speaker has not thought it out.
   Often prefaces a longer answer.  "Well, mumble." 2. Sometimes used
   as an expression of disagreement.  "I think we should buy it."
   "Mumble!"

MUNCH v.  Often confused with "mung", q. v.  To transform information
   in a serial fashion, often requiring large amounts of computation.
   To trace down a data structure.

MUNG (variant: MUNGE) Recursive acronym for Mung Until No Good.  1.
   v.  To make changes to a file, often large-scale, usually
   irrevocable.  Occasionally accidental.  See "blt".  2.  v.  To
   destroy.

POP Based on the stack operation that removes the top of a stack, and
   the fact that procedure return addresses are saved on the stack.
   dialect: POPJ (pop-jay), based on the PDP-10 procedure return
   instruction.  1. v.  To return from a digression.

PUSH Based on the stack operation that puts the current information
   on a stack, and the fact that procedure call addresses are saved
   on the stack. dialect: PUSHJ (push-jay), based on the PDP-10
   procedure call instruction.  1. v.  To enter upon a digression, to
   save the current discussion for later.

SNARF v.  To grab, esp. a large document or file for the purpose of
   using it either with or without the author's permission.  See
   "blt".

SUPERPROGRAMMER 1. n. See "wizard", "hacker".  Usage: rare.

SYSTEM n.  1.  The supervisor program on the computer.  2.  Any
   large-scale program.  3.  Any method or algorithm.  4.  The way
   things are usually done.  usage: A fairly ambiguous word.  "You
   can't beat the system."

TICK n. 1. Interval of time; basic clock time on the computer.
   Typically 1/60 second.

TTY n. pronounced Titty. useage is antiquated. Terminal of the teletype
   variety, characterzed by a noisey mechanical printer and a very
   limited character set and poor print quality.

UP adj.  1. Working, in order.  "The down escalator is up." 2.  BRING
   UP v.  To create a working version and start it.  "They brought up
   a down system."

USER n.  A programmer who will believe anything you tell him.  One
   who asks questions.  Identified at MIT with "loser" by the
   spelling "luser".

WEDGED from "head wedged up ass".  adj.  To be in a locked state,
   incapable of proceeding without help.  (See "gronk").  Often
   refers to humans suffering misconceptions.  "The swapper is
   wedged."

WIN 1. v.  MIT jargon.  To win is to succeed.  A program wins if no
   unexpected conditions arise.  2. BIG WIN n. serendipity.

WINNAGE 1. n. The situation when a lossage is corrected.  Quite rare.

WINNER 1. n.  An unexpectedly good situation, program, programmer or
   person.  2. REAL WINNER: often sarcastic.

WIZARD n.  A person who knows how a complex piece of software or
   hardware works; someone who can find and fix his bugs in an
   emergency.